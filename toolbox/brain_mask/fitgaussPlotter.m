function [figH, axH] = fitgaussPlotter(hDat, figH, axH)
% fitgauss1D: plot gauss fit generated by fitgauss1D
%
% Usage:
%   fitgauss_to_fluohist(wDat, ...
%       lnbis, gaussnumber, sigmaRed, ...
%       gauss2use, image2replace, figH, ...
%       axH, plot_flag)
%
% Args:
%   hDat: structure generated by fitgauss1D
%   figH: figure handle
%   axH: axes handle

if ~exist('figH', 'var') || isempty(figH)
    figH = figure();
end
if ~exist('axH', 'var') || isempty(axH)
    axH = subplot(1, 1, 1);
end

hData1 = line(hDat.xif, hDat.yif, ...
    'color', 'k', 'LineWidth', 1.05, 'Parent', axH); 
hold(axH, 'on')
hData2 = line(hDat.xif,hDat.yfit1, ...
    'color', 'r', 'LineWidth', 0.8, 'Parent', axH);
if isfield(hDat,'yfit2')
    line(hDat.xif,hDat.yfit2, ...
        'color', 'm', 'LineWidth', 0.8, 'Parent', axH);
end
if isfield(hDat,'yfit3')
    line(hDat.xif,hDat.yfit3, ...
        'color', 'm', 'LineWidth', 0.8, 'Parent', axH);
end

% just plot 1st ths
hData3  = line(hDat.xths(:,2), hDat.yths, ...
    'color', 'b', 'LineWidth', 2, 'Parent', axH);
line(hDat.xths(:,1), hDat.yths, ...
    'color', 'b', 'LineWidth', 2, 'Parent', axH)

% legend
legend(axH, [hData1, hData2, hData3], ...
    'Intensity Distribution', ...
    ['Fit of gauss ', num2str(hDat.Idx)], ...
    ['Threshold of gauss', num2str(hDat.Idx)]);

% figure labels
xlabel(axH, 'Max intensity (a.u.)');
ylabel(axH, 'Frame number');

end
